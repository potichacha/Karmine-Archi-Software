services:
  lb:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: load-balancer
    ports:
      - "9090:9090"
    networks:
      - my-network
    depends_on:
      - db
      - container1
      - container2
      - monitoring

  container1:
    build:
      context: .
      dockerfile: src/main/java/demo/service/Dockerfile
    container_name: container1
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/dbase
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 90s
      timeout: 10s
      retries: 3
    restart: on-failure

  container2:
    build:
      context: .
      dockerfile: src/main/java/demo/service/Dockerfile
    container_name: container2
    ports:
      - "8082:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/dbase
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 90s
      timeout: 10s
      retries: 3
    restart: on-failure

  monitoring:
    build:
      context: monitoring
      dockerfile: Dockerfile
    container_name: monitoring
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure
  
  db:
    image: mysql:8.0
    container_name: dbase
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dbase
    ports:
      - "3306:3306"
    networks:
      - my-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 5
      start_period: 5s
      timeout: 10s
    restart: on-failure

networks:
  my-network:
    name: my-network
    external: true

volumes:
  mysql-data:
