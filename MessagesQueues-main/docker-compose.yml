services:
  lb:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: load-balancer
    ports:
      - "9090:9090"
    networks:
      - my-network
    depends_on:
      - db
      - container1
      - container2
      - monitoring

  container1:
    build:
      context: .
      dockerfile: src/main/java/demo/service/Dockerfile
    container_name: container1
    ports:
      - "8081:8080"
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

  container2:
    build:
      context: .
      dockerfile: src/main/java/demo/service/Dockerfile
    container_name: container2
    ports:
      - "8082:8080"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

  monitoring:
    build:
      context: .
      dockerfile: monitoring/dockerfile
    container_name: monitoring
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/var/log
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: dbase
      MYSQL_USER: user
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

networks:
  my-network:
    driver: bridge